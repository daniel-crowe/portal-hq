// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pZ4uecV2QmMik2KVUENP9v
// Component: rOrbBW8AWnHG

import * as React from "react"

import * as p from "@plasmicapp/react-web"
import * as ph from "@plasmicapp/react-web/lib/host"

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Plan from "../../Plan" // plasmic-import: xTjefxdx-lr/component
import Teamplan from "../../Teamplan" // plasmic-import: f8xP7uKc7_O/component
import Enterpriseplan from "../../Enterpriseplan" // plasmic-import: -r3AtHSM7-U/component

import { useScreenVariants as useScreenVariantsepwEdFtbjDeT } from "./PlasmicGlobalVariant__Screen" // plasmic-import: EpwEdFtbjDE-t/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css"

import projectcss from "./plasmic_blank_project_mobile_first.module.css" // plasmic-import: pZ4uecV2QmMik2KVUENP9v/projectcss
import sty from "./PlasmicHomepage.module.css" // plasmic-import: rOrbBW8AWnHG/css

import IconBoxIcon from "./icons/PlasmicIcon__IconBox" // plasmic-import: r7ij4beliM/icon
import DividerIcon from "./icons/PlasmicIcon__Divider" // plasmic-import: PK-S8uHuzA/icon
import Frame13Icon from "./icons/PlasmicIcon__Frame13" // plasmic-import: ejI_aJyiTI/icon
import Frame14Icon from "./icons/PlasmicIcon__Frame14" // plasmic-import: LS8Ak9S2gl/icon
import Frame12Icon from "./icons/PlasmicIcon__Frame12" // plasmic-import: A1mEk6sDNu/icon
import VectorIcon from "./icons/PlasmicIcon__Vector" // plasmic-import: OplqdpierG/icon
import GroupIcon from "./icons/PlasmicIcon__Group" // plasmic-import: eVajWjhv48f/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2" // plasmic-import: kYMFPchdNQ6/icon
import Group2Icon from "./icons/PlasmicIcon__Group2" // plasmic-import: RQl6Zzk4Axy/icon
import Group3Icon from "./icons/PlasmicIcon__Group3" // plasmic-import: iOA927oFnLw/icon
import Vector3Icon from "./icons/PlasmicIcon__Vector3" // plasmic-import: 0sfLtd_55vJ/icon
import Vector4Icon from "./icons/PlasmicIcon__Vector4" // plasmic-import: ZxvJuCv69oV/icon
import Vector1Icon from "./icons/PlasmicIcon__Vector1" // plasmic-import: bTRe8Xb9q1R/icon
import _16OutlinedSuggestedSymbolCheckIcon from "./icons/PlasmicIcon___16OutlinedSuggestedSymbolCheck" // plasmic-import: GKNjyGG-rd/icon

export type PlasmicHomepage__VariantMembers = {}
export type PlasmicHomepage__VariantsArgs = {}
type VariantPropType = keyof PlasmicHomepage__VariantsArgs
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>()

export type PlasmicHomepage__ArgsType = {}
type ArgPropType = keyof PlasmicHomepage__ArgsType
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>()

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">
  pricing?: p.Flex<"div">
  img?: p.Flex<typeof p.PlasmicImg>
  navbar?: p.Flex<"div">
  navbar2?: p.Flex<"div">
  logoContainer?: p.Flex<"div">
  logo?: p.Flex<"div">
  navSectionsAndSignup?: p.Flex<"div">
  navSections?: p.Flex<"div">
  navSection?: p.Flex<"div">
  iconAndSection?: p.Flex<"div">
  sectionName?: p.Flex<"div">
  link?: p.Flex<"div">
  navSection2?: p.Flex<"div">
  iconAndSection2?: p.Flex<"div">
  sectionName2?: p.Flex<"div">
  link2?: p.Flex<"div">
  link3?: p.Flex<"div">
  navSection3?: p.Flex<"div">
  iconAndSection3?: p.Flex<"div">
  sectionName3?: p.Flex<"div">
  link4?: p.Flex<"div">
  link5?: p.Flex<"div">
  navSection4?: p.Flex<"div">
  iconAndSection4?: p.Flex<"div">
  sectionName4?: p.Flex<"div">
  link6?: p.Flex<"div">
  link7?: p.Flex<"div">
  navSection5?: p.Flex<"div">
  iconAndSection5?: p.Flex<"div">
  sectionName5?: p.Flex<"div">
  link8?: p.Flex<"div">
  link9?: p.Flex<"div">
  navSection6?: p.Flex<"div">
  iconAndSection6?: p.Flex<"div">
  sectionName6?: p.Flex<"div">
  link10?: p.Flex<"div">
  navSection7?: p.Flex<"div">
  iconAndSection7?: p.Flex<"div">
  sectionName7?: p.Flex<"div">
  link11?: p.Flex<"div">
  link12?: p.Flex<"div">
  ctas?: p.Flex<"div">
  button?: p.Flex<"div">
  label?: p.Flex<"div">
  button2?: p.Flex<"div">
  label2?: p.Flex<"div">
  columns?: p.Flex<"div">
  plan?: p.Flex<typeof Plan>
  teamplan?: p.Flex<typeof Teamplan>
  enterpriseplan?: p.Flex<typeof Enterpriseplan>
  footer?: p.Flex<"div">
  mainContainer4?: p.Flex<"div">
  legals?: p.Flex<"div">
  aboutPocket?: p.Flex<"div">
  links?: p.Flex<"div">
  hyperlinks?: p.Flex<"div">
  aboutPocket2?: p.Flex<"div">
  aboutPocket3?: p.Flex<"div">
  snLogos?: p.Flex<"div">
  trustedBy?: p.Flex<"div">
  partnersLogos?: p.Flex<"div">
  pokt?: p.Flex<"div">
  group?: p.Flex<"div">
  eth?: p.Flex<"div">
  group8358?: p.Flex<"div">
  ethereumLogo1?: p.Flex<"div">
  ethereumLogo2?: p.Flex<"div">
  polygon?: p.Flex<"div">
  xDai?: p.Flex<"div">
  binanceSmartChain?: p.Flex<"div">
  fuse?: p.Flex<"div">
  avalanche?: p.Flex<"div">
  salesBanner?: p.Flex<"div">
  mainContainer5?: p.Flex<"div">
  header?: p.Flex<"div">
  frame22?: p.Flex<"div">
  button6?: p.Flex<"div">
  label6?: p.Flex<"div">
  button7?: p.Flex<"div">
  label7?: p.Flex<"div">
  quote?: p.Flex<"div">
  frame14?: p.Flex<"div">
  frame8529?: p.Flex<"div">
  image28?: p.Flex<"div">
  frame8530?: p.Flex<"div">
  table?: p.Flex<"div">
  header2?: p.Flex<"div">
  rows?: p.Flex<"div">
  players?: p.Flex<"div">
  text2?: p.Flex<"div">
  infura?: p.Flex<"div">
  alchemy?: p.Flex<"div">
  quicknode?: p.Flex<"div">
  portal?: p.Flex<"div">
  features?: p.Flex<"div">
  iconAndSection17?: p.Flex<"div">
  sectionName17?: p.Flex<"div">
  link22?: p.Flex<"div">
  iconBox10?: p.Flex<"div">
  link23?: p.Flex<"div">
  iconBox11?: p.Flex<"div">
  link24?: p.Flex<"div">
  iconBox12?: p.Flex<"div">
  link25?: p.Flex<"div">
  iconBox13?: p.Flex<"div">
  link26?: p.Flex<"div">
  features2?: p.Flex<"div">
  iconAndSection18?: p.Flex<"div">
  sectionName18?: p.Flex<"div">
  link27?: p.Flex<"div">
  iconBox14?: p.Flex<"div">
  link28?: p.Flex<"div">
  iconBox15?: p.Flex<"div">
  link29?: p.Flex<"div">
  iconBox16?: p.Flex<"div">
  link30?: p.Flex<"div">
  iconBox17?: p.Flex<"div">
  link31?: p.Flex<"div">
  features3?: p.Flex<"div">
  iconAndSection19?: p.Flex<"div">
  sectionName19?: p.Flex<"div">
  link32?: p.Flex<"div">
  iconBox18?: p.Flex<"div">
  link33?: p.Flex<"div">
  iconBox19?: p.Flex<"div">
  link34?: p.Flex<"div">
  iconBox20?: p.Flex<"div">
  link35?: p.Flex<"div">
  iconBox21?: p.Flex<"div">
  link36?: p.Flex<"div">
  features4?: p.Flex<"div">
  iconAndSection20?: p.Flex<"div">
  sectionName20?: p.Flex<"div">
  link37?: p.Flex<"div">
  iconBox22?: p.Flex<"div">
  link38?: p.Flex<"div">
  iconBox23?: p.Flex<"div">
  link39?: p.Flex<"div">
  iconBox24?: p.Flex<"div">
  link40?: p.Flex<"div">
  iconBox25?: p.Flex<"div">
  link41?: p.Flex<"div">
  features5?: p.Flex<"div">
  iconAndSection21?: p.Flex<"div">
  sectionName21?: p.Flex<"div">
  link42?: p.Flex<"div">
  iconBox26?: p.Flex<"div">
  link43?: p.Flex<"div">
  iconBox27?: p.Flex<"div">
  link44?: p.Flex<"div">
  iconBox28?: p.Flex<"div">
  link45?: p.Flex<"div">
  iconBox29?: p.Flex<"div">
  link46?: p.Flex<"div">
  features6?: p.Flex<"div">
  iconAndSection22?: p.Flex<"div">
  sectionName22?: p.Flex<"div">
  link47?: p.Flex<"div">
  iconBox30?: p.Flex<"div">
  link48?: p.Flex<"div">
  iconBox31?: p.Flex<"div">
  link49?: p.Flex<"div">
  iconBox32?: p.Flex<"div">
  link50?: p.Flex<"div">
  iconBox33?: p.Flex<"div">
  link51?: p.Flex<"div">
  features7?: p.Flex<"div">
  iconAndSection23?: p.Flex<"div">
  sectionName23?: p.Flex<"div">
  link52?: p.Flex<"div">
  iconBox34?: p.Flex<"div">
  link53?: p.Flex<"div">
  iconBox35?: p.Flex<"div">
  link54?: p.Flex<"div">
  iconBox36?: p.Flex<"div">
  link55?: p.Flex<"div">
  iconBox37?: p.Flex<"div">
  link56?: p.Flex<"div">
  outline?: p.Flex<"div">
  header3?: p.Flex<"div">
  rpcThatFitsYourNeeds?: p.Flex<"div">
  calculatorCenteredContainer?: p.Flex<"div">
  header4?: p.Flex<"div">
  frame26?: p.Flex<"div">
  frame25?: p.Flex<"div">
  frame24?: p.Flex<"div">
  textInput?: p.Flex<"div">
  frame1?: p.Flex<"div">
  frame2?: p.Flex<"div">
  frame4?: p.Flex<"div">
  frame3?: p.Flex<"div">
  frame5?: p.Flex<"div">
  userIsTypin?: p.Flex<"div">
  frame6?: p.Flex<"div">
  link57?: p.Flex<"div">
  teamPriceBoxSingle2?: p.Flex<"div">
  container?: p.Flex<"div">
  totalMonthlyEstimate?: p.Flex<"div">
  frame17?: p.Flex<"div">
  iconAndSection24?: p.Flex<"div">
  iconBox38?: p.Flex<"div">
  sectionName24?: p.Flex<"div">
  link58?: p.Flex<"div">
  iconAndSection25?: p.Flex<"div">
  iconBox39?: p.Flex<"div">
  sectionName25?: p.Flex<"div">
  link59?: p.Flex<"div">
  button8?: p.Flex<"div">
  label8?: p.Flex<"div">
  badge?: p.Flex<"div">
}

export interface DefaultHomepageProps {
  className?: string
}

const __wrapUserFunction = globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn())
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise
  })

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs
  args: PlasmicHomepage__ArgsType
  overrides: PlasmicHomepage__OverridesType
  forNode?: string
}) {
  const { variants, overrides, forNode } = props

  const $ctx = ph.useDataEnv?.() || {}
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])

  const $props = {
    ...args,
    ...variants,
  }
  const refsRef = React.useRef({})
  const $refs = refsRef.current

  const currentUser = p.useCurrentUser?.() || {}
  const [$queries, setDollarQueries] = React.useState({})

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsepwEdFtbjDeT(),
  })

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root,
          )}
        >
          <div
            data-plasmic-name={"pricing"}
            data-plasmic-override={overrides.pricing}
            className={classNames(projectcss.all, sty.pricing)}
          >
            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"461px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"1440px" as const}
              loading={"lazy" as const}
              src={{
                src: "https://site-assets.plasmic.app/4f22f9f214c3b55a6a84d528ec0f3862.svg",
                fullWidth: 1440,
                fullHeight: 461,
                aspectRatio: 3.123644,
              }}
            />

            <div
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames(projectcss.all, sty.navbar)}
            >
              <div
                data-plasmic-name={"navbar2"}
                data-plasmic-override={overrides.navbar2}
                className={classNames(projectcss.all, sty.navbar2)}
              >
                <div
                  data-plasmic-name={"logoContainer"}
                  data-plasmic-override={overrides.logoContainer}
                  className={classNames(projectcss.all, sty.logoContainer)}
                >
                  <div
                    data-plasmic-name={"logo"}
                    data-plasmic-override={overrides.logo}
                    className={classNames(projectcss.all, sty.logo)}
                  />
                </div>
                <div
                  data-plasmic-name={"navSectionsAndSignup"}
                  data-plasmic-override={overrides.navSectionsAndSignup}
                  className={classNames(projectcss.all, sty.navSectionsAndSignup)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"navSections"}
                    data-plasmic-override={overrides.navSections}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.navSections)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"navSection"}
                      data-plasmic-override={overrides.navSection}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.navSection)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"iconAndSection"}
                        data-plasmic-override={overrides.iconAndSection}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.iconAndSection)}
                      >
                        <IconBoxIcon
                          className={classNames(projectcss.all, sty.svg__v4X5)}
                          role={"img"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"sectionName"}
                          data-plasmic-override={overrides.sectionName}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.sectionName)}
                        >
                          <div
                            data-plasmic-name={"link"}
                            data-plasmic-override={overrides.link}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.link,
                            )}
                          >
                            {"Product"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"navSection2"}
                      data-plasmic-override={overrides.navSection2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.navSection2)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"iconAndSection2"}
                        data-plasmic-override={overrides.iconAndSection2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.iconAndSection2)}
                      >
                        <IconBoxIcon
                          className={classNames(projectcss.all, sty.svg__yG47C)}
                          role={"img"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"sectionName2"}
                          data-plasmic-override={overrides.sectionName2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.sectionName2)}
                        >
                          <div
                            data-plasmic-name={"link2"}
                            data-plasmic-override={overrides.link2}
                            className={classNames(projectcss.all, sty.link2)}
                          >
                            <div
                              data-plasmic-name={"link3"}
                              data-plasmic-override={overrides.link3}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.link3,
                              )}
                            >
                              {"Pricing"}
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"navSection3"}
                      data-plasmic-override={overrides.navSection3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.navSection3)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"iconAndSection3"}
                        data-plasmic-override={overrides.iconAndSection3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.iconAndSection3)}
                      >
                        <IconBoxIcon
                          className={classNames(projectcss.all, sty.svg___5ZOag)}
                          role={"img"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"sectionName3"}
                          data-plasmic-override={overrides.sectionName3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.sectionName3)}
                        >
                          <div
                            data-plasmic-name={"link4"}
                            data-plasmic-override={overrides.link4}
                            className={classNames(projectcss.all, sty.link4)}
                          >
                            <div
                              data-plasmic-name={"link5"}
                              data-plasmic-override={overrides.link5}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.link5,
                              )}
                            >
                              {"Developers"}
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"navSection4"}
                      data-plasmic-override={overrides.navSection4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.navSection4)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"iconAndSection4"}
                        data-plasmic-override={overrides.iconAndSection4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.iconAndSection4)}
                      >
                        <IconBoxIcon
                          className={classNames(projectcss.all, sty.svg__yy1Be)}
                          role={"img"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"sectionName4"}
                          data-plasmic-override={overrides.sectionName4}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.sectionName4)}
                        >
                          <div
                            data-plasmic-name={"link6"}
                            data-plasmic-override={overrides.link6}
                            className={classNames(projectcss.all, sty.link6)}
                          >
                            <div
                              data-plasmic-name={"link7"}
                              data-plasmic-override={overrides.link7}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.link7,
                              )}
                            >
                              {"Community"}
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"navSection5"}
                      data-plasmic-override={overrides.navSection5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.navSection5)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"iconAndSection5"}
                        data-plasmic-override={overrides.iconAndSection5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.iconAndSection5)}
                      >
                        <IconBoxIcon
                          className={classNames(projectcss.all, sty.svg__iQteF)}
                          role={"img"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"sectionName5"}
                          data-plasmic-override={overrides.sectionName5}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.sectionName5)}
                        >
                          <div
                            data-plasmic-name={"link8"}
                            data-plasmic-override={overrides.link8}
                            className={classNames(projectcss.all, sty.link8)}
                          >
                            <div
                              data-plasmic-name={"link9"}
                              data-plasmic-override={overrides.link9}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.link9,
                              )}
                            >
                              {"Use cases"}
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"navSection6"}
                      data-plasmic-override={overrides.navSection6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.navSection6)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"iconAndSection6"}
                        data-plasmic-override={overrides.iconAndSection6}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.iconAndSection6)}
                      >
                        <IconBoxIcon
                          className={classNames(projectcss.all, sty.svg__bcUeg)}
                          role={"img"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"sectionName6"}
                          data-plasmic-override={overrides.sectionName6}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.sectionName6)}
                        >
                          <div
                            data-plasmic-name={"link10"}
                            data-plasmic-override={overrides.link10}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.link10,
                            )}
                          >
                            {"Network explorer"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"navSection7"}
                      data-plasmic-override={overrides.navSection7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.navSection7)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"iconAndSection7"}
                        data-plasmic-override={overrides.iconAndSection7}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.iconAndSection7)}
                      >
                        <IconBoxIcon
                          className={classNames(projectcss.all, sty.svg__utJLm)}
                          role={"img"}
                        />

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"sectionName7"}
                          data-plasmic-override={overrides.sectionName7}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.sectionName7)}
                        >
                          <div
                            data-plasmic-name={"link11"}
                            data-plasmic-override={overrides.link11}
                            className={classNames(projectcss.all, sty.link11)}
                          >
                            <div
                              data-plasmic-name={"link12"}
                              data-plasmic-override={overrides.link12}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.link12,
                              )}
                            >
                              {"About"}
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"ctas"}
                    data-plasmic-override={overrides.ctas}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.ctas)}
                  >
                    <div
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames(projectcss.all, sty.button)}
                    >
                      <div
                        data-plasmic-name={"label"}
                        data-plasmic-override={overrides.label}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label,
                        )}
                      >
                        {"Login"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"button2"}
                      data-plasmic-override={overrides.button2}
                      className={classNames(projectcss.all, sty.button2)}
                    >
                      <div
                        data-plasmic-name={"label2"}
                        data-plasmic-override={overrides.label2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label2,
                        )}
                      >
                        {"Signup"}
                      </div>
                    </div>
                  </p.Stack>
                </div>
              </div>
            </div>
            {(hasVariant(globalVariants, "screen", "desktopOnly") ? true : true) ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                {(hasVariant(globalVariants, "screen", "desktopOnly") ? true : true) ? (
                  <div className={classNames(projectcss.all, sty.column___9ZRq3)}>
                    <Plan
                      data-plasmic-name={"plan"}
                      data-plasmic-override={overrides.plan}
                      className={classNames("__wab_instance", sty.plan)}
                    />
                  </div>
                ) : null}
                {(hasVariant(globalVariants, "screen", "desktopOnly") ? true : true) ? (
                  <div className={classNames(projectcss.all, sty.column___31Udu)}>
                    <Teamplan
                      data-plasmic-name={"teamplan"}
                      data-plasmic-override={overrides.teamplan}
                      className={classNames("__wab_instance", sty.teamplan)}
                    />
                  </div>
                ) : null}
                {(hasVariant(globalVariants, "screen", "desktopOnly") ? true : true) ? (
                  <div className={classNames(projectcss.all, sty.column__eWilA)}>
                    <Enterpriseplan
                      data-plasmic-name={"enterpriseplan"}
                      data-plasmic-override={overrides.enterpriseplan}
                      className={classNames("__wab_instance", sty.enterpriseplan)}
                    />
                  </div>
                ) : null}
              </p.Stack>
            ) : null}
            <p.Stack
              as={"div"}
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              hasGap={true}
              className={classNames(projectcss.all, sty.footer)}
            >
              <div
                data-plasmic-name={"mainContainer4"}
                data-plasmic-override={overrides.mainContainer4}
                className={classNames(projectcss.all, sty.mainContainer4)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"legals"}
                  data-plasmic-override={overrides.legals}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.legals)}
                >
                  <div
                    data-plasmic-name={"aboutPocket"}
                    data-plasmic-override={overrides.aboutPocket}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.aboutPocket,
                    )}
                  >
                    {"© 2023 Pocket Network Inc. Site Terms of Use | Privacy Policy"}
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"links"}
                  data-plasmic-override={overrides.links}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.links)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"hyperlinks"}
                    data-plasmic-override={overrides.hyperlinks}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.hyperlinks)}
                  >
                    <div
                      data-plasmic-name={"aboutPocket2"}
                      data-plasmic-override={overrides.aboutPocket2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.aboutPocket2,
                      )}
                    >
                      {"About Portal"}
                    </div>
                    <div
                      data-plasmic-name={"aboutPocket3"}
                      data-plasmic-override={overrides.aboutPocket3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.aboutPocket3,
                      )}
                    >
                      {"Contact"}
                    </div>
                  </p.Stack>
                  <div className={classNames(projectcss.all, sty.freeBox__zFIk)}>
                    <DividerIcon
                      className={classNames(projectcss.all, sty.svg__nDnLe)}
                      role={"img"}
                    />
                  </div>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"snLogos"}
                    data-plasmic-override={overrides.snLogos}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.snLogos)}
                  >
                    <p.Stack
                      as={Frame13Icon}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.svg__wYqdd)}
                      role={"img"}
                    />

                    <p.Stack
                      as={Frame14Icon}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.svg__yi4Hq)}
                      role={"img"}
                    />

                    <p.Stack
                      as={Frame12Icon}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.svg__dxkt5)}
                      role={"img"}
                    />
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"trustedBy"}
              data-plasmic-override={overrides.trustedBy}
              hasGap={true}
              className={classNames(projectcss.all, sty.trustedBy)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eMhg,
                )}
              >
                {"Trusted by web3 developers worlwide"}
              </div>
              <p.Stack
                as={"div"}
                data-plasmic-name={"partnersLogos"}
                data-plasmic-override={overrides.partnersLogos}
                hasGap={true}
                className={classNames(projectcss.all, sty.partnersLogos)}
              >
                <div
                  data-plasmic-name={"pokt"}
                  data-plasmic-override={overrides.pokt}
                  className={classNames(projectcss.all, sty.pokt)}
                >
                  <VectorIcon
                    className={classNames(projectcss.all, sty.svg__iuugD)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"group"}
                    data-plasmic-override={overrides.group}
                    className={classNames(projectcss.all, sty.group)}
                  >
                    <GroupIcon
                      className={classNames(projectcss.all, sty.svg___2NtEg)}
                      role={"img"}
                    />

                    <Vector2Icon
                      className={classNames(projectcss.all, sty.svg__vo6LR)}
                      role={"img"}
                    />

                    <Group2Icon
                      className={classNames(projectcss.all, sty.svg__nPOf)}
                      role={"img"}
                    />

                    <Group3Icon
                      className={classNames(projectcss.all, sty.svg___1FAj)}
                      role={"img"}
                    />

                    <Vector3Icon
                      className={classNames(projectcss.all, sty.svg__eh7VS)}
                      role={"img"}
                    />
                  </div>
                </div>
                <div
                  data-plasmic-name={"eth"}
                  data-plasmic-override={overrides.eth}
                  className={classNames(projectcss.all, sty.eth)}
                >
                  <div
                    data-plasmic-name={"group8358"}
                    data-plasmic-override={overrides.group8358}
                    className={classNames(projectcss.all, sty.group8358)}
                  >
                    <div
                      data-plasmic-name={"ethereumLogo1"}
                      data-plasmic-override={overrides.ethereumLogo1}
                      className={classNames(projectcss.all, sty.ethereumLogo1)}
                    />

                    <div
                      data-plasmic-name={"ethereumLogo2"}
                      data-plasmic-override={overrides.ethereumLogo2}
                      className={classNames(projectcss.all, sty.ethereumLogo2)}
                    />
                  </div>
                </div>
                <div
                  data-plasmic-name={"polygon"}
                  data-plasmic-override={overrides.polygon}
                  className={classNames(projectcss.all, sty.polygon)}
                />

                <div
                  data-plasmic-name={"xDai"}
                  data-plasmic-override={overrides.xDai}
                  className={classNames(projectcss.all, sty.xDai)}
                />

                <div
                  data-plasmic-name={"binanceSmartChain"}
                  data-plasmic-override={overrides.binanceSmartChain}
                  className={classNames(projectcss.all, sty.binanceSmartChain)}
                />

                <div
                  data-plasmic-name={"fuse"}
                  data-plasmic-override={overrides.fuse}
                  className={classNames(projectcss.all, sty.fuse)}
                />

                <div
                  data-plasmic-name={"avalanche"}
                  data-plasmic-override={overrides.avalanche}
                  className={classNames(projectcss.all, sty.avalanche)}
                />
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"salesBanner"}
              data-plasmic-override={overrides.salesBanner}
              hasGap={true}
              className={classNames(projectcss.all, sty.salesBanner)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"mainContainer5"}
                data-plasmic-override={overrides.mainContainer5}
                hasGap={true}
                className={classNames(projectcss.all, sty.mainContainer5)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"header"}
                  data-plasmic-override={overrides.header}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.header)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kReTy,
                    )}
                  >
                    {"Have questions?"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5OUvB,
                    )}
                  >
                    {
                      "We offer volume discounts and bespoke features.\ndrop us a line and let us know how we can help."
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame22"}
                  data-plasmic-override={overrides.frame22}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame22)}
                >
                  <div
                    data-plasmic-name={"button6"}
                    data-plasmic-override={overrides.button6}
                    className={classNames(projectcss.all, sty.button6)}
                  >
                    <div
                      data-plasmic-name={"label6"}
                      data-plasmic-override={overrides.label6}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label6,
                      )}
                    >
                      {"FAQ"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"button7"}
                    data-plasmic-override={overrides.button7}
                    className={classNames(projectcss.all, sty.button7)}
                  >
                    <div
                      data-plasmic-name={"label7"}
                      data-plasmic-override={overrides.label7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label7,
                      )}
                    >
                      {"Schedule a Call"}
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"quote"}
                data-plasmic-override={overrides.quote}
                hasGap={true}
                className={classNames(projectcss.all, sty.quote)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame14"}
                  data-plasmic-override={overrides.frame14}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame14)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ceZzF,
                    )}
                  >
                    {
                      "“We're thrilled to have found Pocket as our partner in providing the best possible RPC infrastructure for our users. Their quick deployment of support for new chains allowed us to pivot faster and offer our users access to new opportunities in just a few hours instead of weeks. We're happy to have them as our primary RPC provider”"
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame8529"}
                  data-plasmic-override={overrides.frame8529}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame8529)}
                >
                  <div
                    data-plasmic-name={"image28"}
                    data-plasmic-override={overrides.image28}
                    className={classNames(projectcss.all, sty.image28)}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame8530"}
                    data-plasmic-override={overrides.frame8530}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame8530)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wQi77,
                      )}
                    >
                      {"Alex Harley"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uGxDc,
                      )}
                    >
                      {"CTO Omni Wallet"}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"table"}
              data-plasmic-override={overrides.table}
              hasGap={true}
              className={classNames(projectcss.all, sty.table)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"header2"}
                data-plasmic-override={overrides.header2}
                hasGap={true}
                className={classNames(projectcss.all, sty.header2)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rc2H,
                  )}
                >
                  {"Over 40 chains across the only \ndecentralized RPC provider in web3"}
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"rows"}
                data-plasmic-override={overrides.rows}
                hasGap={true}
                className={classNames(projectcss.all, sty.rows)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__c91Bu)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"players"}
                    data-plasmic-override={overrides.players}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.players)}
                  >
                    <div
                      data-plasmic-name={"text2"}
                      data-plasmic-override={overrides.text2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text2,
                      )}
                    >
                      {"  "}
                    </div>
                    <div
                      data-plasmic-name={"infura"}
                      data-plasmic-override={overrides.infura}
                      className={classNames(projectcss.all, sty.infura)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yoSNt,
                        )}
                      >
                        {"Infura"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"alchemy"}
                      data-plasmic-override={overrides.alchemy}
                      className={classNames(projectcss.all, sty.alchemy)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zUyum,
                        )}
                      >
                        {"Alchemy"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"quicknode"}
                      data-plasmic-override={overrides.quicknode}
                      className={classNames(projectcss.all, sty.quicknode)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___48R5M,
                        )}
                      >
                        {"Quicknode"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"portal"}
                      data-plasmic-override={overrides.portal}
                      className={classNames(projectcss.all, sty.portal)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9Yj4N,
                        )}
                      >
                        {"Portal"}
                      </div>
                    </div>
                  </p.Stack>
                  <div
                    data-plasmic-name={"features"}
                    data-plasmic-override={overrides.features}
                    className={classNames(projectcss.all, sty.features)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection17"}
                      data-plasmic-override={overrides.iconAndSection17}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection17)}
                    >
                      <div
                        data-plasmic-name={"sectionName17"}
                        data-plasmic-override={overrides.sectionName17}
                        className={classNames(projectcss.all, sty.sectionName17)}
                      >
                        <div
                          data-plasmic-name={"link22"}
                          data-plasmic-override={overrides.link22}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link22,
                          )}
                        >
                          {"Price per relay (per mm )"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox10"}
                        data-plasmic-override={overrides.iconBox10}
                        className={classNames(projectcss.all, sty.iconBox10)}
                      >
                        <div
                          data-plasmic-name={"link23"}
                          data-plasmic-override={overrides.link23}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link23,
                          )}
                        >
                          {"$7"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox11"}
                        data-plasmic-override={overrides.iconBox11}
                        className={classNames(projectcss.all, sty.iconBox11)}
                      >
                        <div
                          data-plasmic-name={"link24"}
                          data-plasmic-override={overrides.link24}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link24,
                          )}
                        >
                          {"$3-7*"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox12"}
                        data-plasmic-override={overrides.iconBox12}
                        className={classNames(projectcss.all, sty.iconBox12)}
                      >
                        <div
                          data-plasmic-name={"link25"}
                          data-plasmic-override={overrides.link25}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link25,
                          )}
                        >
                          {"$5+*"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox13"}
                        data-plasmic-override={overrides.iconBox13}
                        className={classNames(projectcss.all, sty.iconBox13)}
                      >
                        <div
                          data-plasmic-name={"link26"}
                          data-plasmic-override={overrides.link26}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link26,
                          )}
                        >
                          {"$3.5"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                  <div
                    data-plasmic-name={"features2"}
                    data-plasmic-override={overrides.features2}
                    className={classNames(projectcss.all, sty.features2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection18"}
                      data-plasmic-override={overrides.iconAndSection18}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection18)}
                    >
                      <div
                        data-plasmic-name={"sectionName18"}
                        data-plasmic-override={overrides.sectionName18}
                        className={classNames(projectcss.all, sty.sectionName18)}
                      >
                        <div
                          data-plasmic-name={"link27"}
                          data-plasmic-override={overrides.link27}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link27,
                          )}
                        >
                          {"Number of Chains Supported"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox14"}
                        data-plasmic-override={overrides.iconBox14}
                        className={classNames(projectcss.all, sty.iconBox14)}
                      >
                        <div
                          data-plasmic-name={"link28"}
                          data-plasmic-override={overrides.link28}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link28,
                          )}
                        >
                          {"00"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox15"}
                        data-plasmic-override={overrides.iconBox15}
                        className={classNames(projectcss.all, sty.iconBox15)}
                      >
                        <div
                          data-plasmic-name={"link29"}
                          data-plasmic-override={overrides.link29}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link29,
                          )}
                        >
                          {"00"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox16"}
                        data-plasmic-override={overrides.iconBox16}
                        className={classNames(projectcss.all, sty.iconBox16)}
                      >
                        <div
                          data-plasmic-name={"link30"}
                          data-plasmic-override={overrides.link30}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link30,
                          )}
                        >
                          {"00"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox17"}
                        data-plasmic-override={overrides.iconBox17}
                        className={classNames(projectcss.all, sty.iconBox17)}
                      >
                        <div
                          data-plasmic-name={"link31"}
                          data-plasmic-override={overrides.link31}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link31,
                          )}
                        >
                          {"00"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                  <div
                    data-plasmic-name={"features3"}
                    data-plasmic-override={overrides.features3}
                    className={classNames(projectcss.all, sty.features3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection19"}
                      data-plasmic-override={overrides.iconAndSection19}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection19)}
                    >
                      <div
                        data-plasmic-name={"sectionName19"}
                        data-plasmic-override={overrides.sectionName19}
                        className={classNames(projectcss.all, sty.sectionName19)}
                      >
                        <div
                          data-plasmic-name={"link32"}
                          data-plasmic-override={overrides.link32}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link32,
                          )}
                        >
                          {"EVM Supported Chains"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox18"}
                        data-plasmic-override={overrides.iconBox18}
                        className={classNames(projectcss.all, sty.iconBox18)}
                      >
                        <div
                          data-plasmic-name={"link33"}
                          data-plasmic-override={overrides.link33}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link33,
                          )}
                        >
                          {"13"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox19"}
                        data-plasmic-override={overrides.iconBox19}
                        className={classNames(projectcss.all, sty.iconBox19)}
                      >
                        <div
                          data-plasmic-name={"link34"}
                          data-plasmic-override={overrides.link34}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link34,
                          )}
                        >
                          {"6"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox20"}
                        data-plasmic-override={overrides.iconBox20}
                        className={classNames(projectcss.all, sty.iconBox20)}
                      >
                        <div
                          data-plasmic-name={"link35"}
                          data-plasmic-override={overrides.link35}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link35,
                          )}
                        >
                          {"16"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox21"}
                        data-plasmic-override={overrides.iconBox21}
                        className={classNames(projectcss.all, sty.iconBox21)}
                      >
                        <div
                          data-plasmic-name={"link36"}
                          data-plasmic-override={overrides.link36}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link36,
                          )}
                        >
                          {"33"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                  <div
                    data-plasmic-name={"features4"}
                    data-plasmic-override={overrides.features4}
                    className={classNames(projectcss.all, sty.features4)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection20"}
                      data-plasmic-override={overrides.iconAndSection20}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection20)}
                    >
                      <div
                        data-plasmic-name={"sectionName20"}
                        data-plasmic-override={overrides.sectionName20}
                        className={classNames(projectcss.all, sty.sectionName20)}
                      >
                        <div
                          data-plasmic-name={"link37"}
                          data-plasmic-override={overrides.link37}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link37,
                          )}
                        >
                          {"Non-EVM Supported Chains"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox22"}
                        data-plasmic-override={overrides.iconBox22}
                        className={classNames(projectcss.all, sty.iconBox22)}
                      >
                        <div
                          data-plasmic-name={"link38"}
                          data-plasmic-override={overrides.link38}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link38,
                          )}
                        >
                          {"-"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox23"}
                        data-plasmic-override={overrides.iconBox23}
                        className={classNames(projectcss.all, sty.iconBox23)}
                      >
                        <div
                          data-plasmic-name={"link39"}
                          data-plasmic-override={overrides.link39}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link39,
                          )}
                        >
                          {"2"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox24"}
                        data-plasmic-override={overrides.iconBox24}
                        className={classNames(projectcss.all, sty.iconBox24)}
                      >
                        <div
                          data-plasmic-name={"link40"}
                          data-plasmic-override={overrides.link40}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link40,
                          )}
                        >
                          {"3"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox25"}
                        data-plasmic-override={overrides.iconBox25}
                        className={classNames(projectcss.all, sty.iconBox25)}
                      >
                        <div
                          data-plasmic-name={"link41"}
                          data-plasmic-override={overrides.link41}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link41,
                          )}
                        >
                          {"11"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                  <div
                    data-plasmic-name={"features5"}
                    data-plasmic-override={overrides.features5}
                    className={classNames(projectcss.all, sty.features5)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection21"}
                      data-plasmic-override={overrides.iconAndSection21}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection21)}
                    >
                      <div
                        data-plasmic-name={"sectionName21"}
                        data-plasmic-override={overrides.sectionName21}
                        className={classNames(projectcss.all, sty.sectionName21)}
                      >
                        <div
                          data-plasmic-name={"link42"}
                          data-plasmic-override={overrides.link42}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link42,
                          )}
                        >
                          {"Network Centralization"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox26"}
                        data-plasmic-override={overrides.iconBox26}
                        className={classNames(projectcss.all, sty.iconBox26)}
                      >
                        <div
                          data-plasmic-name={"link43"}
                          data-plasmic-override={overrides.link43}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link43,
                          )}
                        >
                          {"Centralized"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox27"}
                        data-plasmic-override={overrides.iconBox27}
                        className={classNames(projectcss.all, sty.iconBox27)}
                      >
                        <div
                          data-plasmic-name={"link44"}
                          data-plasmic-override={overrides.link44}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link44,
                          )}
                        >
                          {"Centralized"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox28"}
                        data-plasmic-override={overrides.iconBox28}
                        className={classNames(projectcss.all, sty.iconBox28)}
                      >
                        <div
                          data-plasmic-name={"link45"}
                          data-plasmic-override={overrides.link45}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link45,
                          )}
                        >
                          {"Centralized"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox29"}
                        data-plasmic-override={overrides.iconBox29}
                        className={classNames(projectcss.all, sty.iconBox29)}
                      >
                        <div
                          data-plasmic-name={"link46"}
                          data-plasmic-override={overrides.link46}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link46,
                          )}
                        >
                          {"Decentralized"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                  <div
                    data-plasmic-name={"features6"}
                    data-plasmic-override={overrides.features6}
                    className={classNames(projectcss.all, sty.features6)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection22"}
                      data-plasmic-override={overrides.iconAndSection22}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection22)}
                    >
                      <div
                        data-plasmic-name={"sectionName22"}
                        data-plasmic-override={overrides.sectionName22}
                        className={classNames(projectcss.all, sty.sectionName22)}
                      >
                        <div
                          data-plasmic-name={"link47"}
                          data-plasmic-override={overrides.link47}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link47,
                          )}
                        >
                          {"Server Regions"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox30"}
                        data-plasmic-override={overrides.iconBox30}
                        className={classNames(projectcss.all, sty.iconBox30)}
                      >
                        <div
                          data-plasmic-name={"link48"}
                          data-plasmic-override={overrides.link48}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link48,
                          )}
                        >
                          {"1"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox31"}
                        data-plasmic-override={overrides.iconBox31}
                        className={classNames(projectcss.all, sty.iconBox31)}
                      >
                        <div
                          data-plasmic-name={"link49"}
                          data-plasmic-override={overrides.link49}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link49,
                          )}
                        >
                          {"**"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox32"}
                        data-plasmic-override={overrides.iconBox32}
                        className={classNames(projectcss.all, sty.iconBox32)}
                      >
                        <div
                          data-plasmic-name={"link50"}
                          data-plasmic-override={overrides.link50}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link50,
                          )}
                        >
                          {"5"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox33"}
                        data-plasmic-override={overrides.iconBox33}
                        className={classNames(projectcss.all, sty.iconBox33)}
                      >
                        <div
                          data-plasmic-name={"link51"}
                          data-plasmic-override={overrides.link51}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link51,
                          )}
                        >
                          {"16"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                  <div
                    data-plasmic-name={"features7"}
                    data-plasmic-override={overrides.features7}
                    className={classNames(projectcss.all, sty.features7)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection23"}
                      data-plasmic-override={overrides.iconAndSection23}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection23)}
                    >
                      <div
                        data-plasmic-name={"sectionName23"}
                        data-plasmic-override={overrides.sectionName23}
                        className={classNames(projectcss.all, sty.sectionName23)}
                      >
                        <div
                          data-plasmic-name={"link52"}
                          data-plasmic-override={overrides.link52}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link52,
                          )}
                        >
                          {"Number of Endpoints (free tier)"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox34"}
                        data-plasmic-override={overrides.iconBox34}
                        className={classNames(projectcss.all, sty.iconBox34)}
                      >
                        <div
                          data-plasmic-name={"link53"}
                          data-plasmic-override={overrides.link53}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link53,
                          )}
                        >
                          {"3"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox35"}
                        data-plasmic-override={overrides.iconBox35}
                        className={classNames(projectcss.all, sty.iconBox35)}
                      >
                        <div
                          data-plasmic-name={"link54"}
                          data-plasmic-override={overrides.link54}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link54,
                          )}
                        >
                          {"5"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox36"}
                        data-plasmic-override={overrides.iconBox36}
                        className={classNames(projectcss.all, sty.iconBox36)}
                      >
                        <div
                          data-plasmic-name={"link55"}
                          data-plasmic-override={overrides.link55}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link55,
                          )}
                        >
                          {"1 "}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"iconBox37"}
                        data-plasmic-override={overrides.iconBox37}
                        className={classNames(projectcss.all, sty.iconBox37)}
                      >
                        <div
                          data-plasmic-name={"link56"}
                          data-plasmic-override={overrides.link56}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link56,
                          )}
                        >
                          {"No limit"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                </p.Stack>
              </p.Stack>
              <div
                data-plasmic-name={"outline"}
                data-plasmic-override={overrides.outline}
                className={classNames(projectcss.all, sty.outline)}
              />
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"header3"}
              data-plasmic-override={overrides.header3}
              hasGap={true}
              className={classNames(projectcss.all, sty.header3)}
            >
              <div
                data-plasmic-name={"rpcThatFitsYourNeeds"}
                data-plasmic-override={overrides.rpcThatFitsYourNeeds}
                className={classNames(projectcss.all, sty.rpcThatFitsYourNeeds)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__k9Dw8,
                  )}
                >
                  {"RPC that fits your needs"}
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5KEAo,
                )}
              >
                {
                  "From launch to the moon, RPC plans that let you focus on building without worrying about scale."
                }
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"calculatorCenteredContainer"}
              data-plasmic-override={overrides.calculatorCenteredContainer}
              hasGap={true}
              className={classNames(projectcss.all, sty.calculatorCenteredContainer)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"header4"}
                data-plasmic-override={overrides.header4}
                hasGap={true}
                className={classNames(projectcss.all, sty.header4)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame26"}
                  data-plasmic-override={overrides.frame26}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame26)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6O6Xy,
                    )}
                  >
                    {"Calculate your costs"}
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame25"}
                  data-plasmic-override={overrides.frame25}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame25)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame24"}
                    data-plasmic-override={overrides.frame24}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame24)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___42Fy,
                      )}
                    >
                      {"Number of average API calls per day"}
                    </div>
                    <div
                      data-plasmic-name={"textInput"}
                      data-plasmic-override={overrides.textInput}
                      className={classNames(projectcss.all, sty.textInput)}
                    >
                      {false ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1"}
                          data-plasmic-override={overrides.frame1}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame1)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame2"}
                            data-plasmic-override={overrides.frame2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame2)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__bEjrV,
                              )}
                            >
                              {"Label"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      ) : null}
                      {false ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame4"}
                          data-plasmic-override={overrides.frame4}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame4)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0WAwK,
                            )}
                          >
                            {"This is a description"}
                          </div>
                        </p.Stack>
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame3"}
                        data-plasmic-override={overrides.frame3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame3)}
                      >
                        <div
                          data-plasmic-name={"frame5"}
                          data-plasmic-override={overrides.frame5}
                          className={classNames(projectcss.all, sty.frame5)}
                        >
                          <div
                            data-plasmic-name={"userIsTypin"}
                            data-plasmic-override={overrides.userIsTypin}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.userIsTypin,
                            )}
                          >
                            {"5,367,785"}
                          </div>
                          <div className={classNames(projectcss.all, sty.freeBox__gf7R0)}>
                            <Vector4Icon
                              className={classNames(projectcss.all, sty.svg__nkGnf)}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <Vector1Icon
                              className={classNames(projectcss.all, sty.svg__soQj1)}
                              role={"img"}
                            />
                          ) : null}
                        </div>
                      </p.Stack>
                      {false ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame6"}
                          data-plasmic-override={overrides.frame6}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame6)}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__peBw,
                              )}
                            >
                              {"You did something wrong!"}
                            </div>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </div>
                    <div
                      data-plasmic-name={"link57"}
                      data-plasmic-override={overrides.link57}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.link57,
                      )}
                    >
                      {"$0.000007456 / API call"}
                    </div>
                  </p.Stack>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zTodc,
                    )}
                  >
                    {"How is this calculated?"}
                  </div>
                </p.Stack>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"teamPriceBoxSingle2"}
                data-plasmic-override={overrides.teamPriceBoxSingle2}
                hasGap={true}
                className={classNames(projectcss.all, sty.teamPriceBoxSingle2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"container"}
                  data-plasmic-override={overrides.container}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.container)}
                >
                  <div
                    data-plasmic-name={"totalMonthlyEstimate"}
                    data-plasmic-override={overrides.totalMonthlyEstimate}
                    className={classNames(projectcss.all, sty.totalMonthlyEstimate)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kDst,
                      )}
                    >
                      {"Total monthly estimate"}
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cXloX,
                    )}
                  >
                    {"$39.99"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xiaC,
                    )}
                  >
                    {"Paid with credit card, billed monthly:"}
                  </div>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame17"}
                    data-plasmic-override={overrides.frame17}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame17)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection24"}
                      data-plasmic-override={overrides.iconAndSection24}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection24)}
                    >
                      <div
                        data-plasmic-name={"iconBox38"}
                        data-plasmic-override={overrides.iconBox38}
                        className={classNames(projectcss.all, sty.iconBox38)}
                      >
                        <_16OutlinedSuggestedSymbolCheckIcon
                          className={classNames(projectcss.all, sty.svg__yeldA)}
                          role={"img"}
                        />
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"sectionName24"}
                        data-plasmic-override={overrides.sectionName24}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.sectionName24)}
                      >
                        <div
                          data-plasmic-name={"link58"}
                          data-plasmic-override={overrides.link58}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link58,
                          )}
                        >
                          {"$0.000007456 / API call"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"iconAndSection25"}
                      data-plasmic-override={overrides.iconAndSection25}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.iconAndSection25)}
                    >
                      <div
                        data-plasmic-name={"iconBox39"}
                        data-plasmic-override={overrides.iconBox39}
                        className={classNames(projectcss.all, sty.iconBox39)}
                      >
                        <_16OutlinedSuggestedSymbolCheckIcon
                          className={classNames(projectcss.all, sty.svg___2Kcs5)}
                          role={"img"}
                        />
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"sectionName25"}
                        data-plasmic-override={overrides.sectionName25}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.sectionName25)}
                      >
                        <div
                          data-plasmic-name={"link59"}
                          data-plasmic-override={overrides.link59}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.link59,
                          )}
                        >
                          {"Support"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
                <div
                  data-plasmic-name={"button8"}
                  data-plasmic-override={overrides.button8}
                  className={classNames(projectcss.all, sty.button8)}
                >
                  <div
                    data-plasmic-name={"label8"}
                    data-plasmic-override={overrides.label8}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label8,
                    )}
                  >
                    {"Get started"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"badge"}
                  data-plasmic-override={overrides.badge}
                  className={classNames(projectcss.all, sty.badge)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pCiSy,
                    )}
                  >
                    {"Team plan"}
                  </div>
                </div>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null
}

const PlasmicDescendants = {
  root: [
    "root",
    "pricing",
    "img",
    "navbar",
    "navbar2",
    "logoContainer",
    "logo",
    "navSectionsAndSignup",
    "navSections",
    "navSection",
    "iconAndSection",
    "sectionName",
    "link",
    "navSection2",
    "iconAndSection2",
    "sectionName2",
    "link2",
    "link3",
    "navSection3",
    "iconAndSection3",
    "sectionName3",
    "link4",
    "link5",
    "navSection4",
    "iconAndSection4",
    "sectionName4",
    "link6",
    "link7",
    "navSection5",
    "iconAndSection5",
    "sectionName5",
    "link8",
    "link9",
    "navSection6",
    "iconAndSection6",
    "sectionName6",
    "link10",
    "navSection7",
    "iconAndSection7",
    "sectionName7",
    "link11",
    "link12",
    "ctas",
    "button",
    "label",
    "button2",
    "label2",
    "columns",
    "plan",
    "teamplan",
    "enterpriseplan",
    "footer",
    "mainContainer4",
    "legals",
    "aboutPocket",
    "links",
    "hyperlinks",
    "aboutPocket2",
    "aboutPocket3",
    "snLogos",
    "trustedBy",
    "partnersLogos",
    "pokt",
    "group",
    "eth",
    "group8358",
    "ethereumLogo1",
    "ethereumLogo2",
    "polygon",
    "xDai",
    "binanceSmartChain",
    "fuse",
    "avalanche",
    "salesBanner",
    "mainContainer5",
    "header",
    "frame22",
    "button6",
    "label6",
    "button7",
    "label7",
    "quote",
    "frame14",
    "frame8529",
    "image28",
    "frame8530",
    "table",
    "header2",
    "rows",
    "players",
    "text2",
    "infura",
    "alchemy",
    "quicknode",
    "portal",
    "features",
    "iconAndSection17",
    "sectionName17",
    "link22",
    "iconBox10",
    "link23",
    "iconBox11",
    "link24",
    "iconBox12",
    "link25",
    "iconBox13",
    "link26",
    "features2",
    "iconAndSection18",
    "sectionName18",
    "link27",
    "iconBox14",
    "link28",
    "iconBox15",
    "link29",
    "iconBox16",
    "link30",
    "iconBox17",
    "link31",
    "features3",
    "iconAndSection19",
    "sectionName19",
    "link32",
    "iconBox18",
    "link33",
    "iconBox19",
    "link34",
    "iconBox20",
    "link35",
    "iconBox21",
    "link36",
    "features4",
    "iconAndSection20",
    "sectionName20",
    "link37",
    "iconBox22",
    "link38",
    "iconBox23",
    "link39",
    "iconBox24",
    "link40",
    "iconBox25",
    "link41",
    "features5",
    "iconAndSection21",
    "sectionName21",
    "link42",
    "iconBox26",
    "link43",
    "iconBox27",
    "link44",
    "iconBox28",
    "link45",
    "iconBox29",
    "link46",
    "features6",
    "iconAndSection22",
    "sectionName22",
    "link47",
    "iconBox30",
    "link48",
    "iconBox31",
    "link49",
    "iconBox32",
    "link50",
    "iconBox33",
    "link51",
    "features7",
    "iconAndSection23",
    "sectionName23",
    "link52",
    "iconBox34",
    "link53",
    "iconBox35",
    "link54",
    "iconBox36",
    "link55",
    "iconBox37",
    "link56",
    "outline",
    "header3",
    "rpcThatFitsYourNeeds",
    "calculatorCenteredContainer",
    "header4",
    "frame26",
    "frame25",
    "frame24",
    "textInput",
    "frame1",
    "frame2",
    "frame4",
    "frame3",
    "frame5",
    "userIsTypin",
    "frame6",
    "link57",
    "teamPriceBoxSingle2",
    "container",
    "totalMonthlyEstimate",
    "frame17",
    "iconAndSection24",
    "iconBox38",
    "sectionName24",
    "link58",
    "iconAndSection25",
    "iconBox39",
    "sectionName25",
    "link59",
    "button8",
    "label8",
    "badge",
  ],
  pricing: [
    "pricing",
    "img",
    "navbar",
    "navbar2",
    "logoContainer",
    "logo",
    "navSectionsAndSignup",
    "navSections",
    "navSection",
    "iconAndSection",
    "sectionName",
    "link",
    "navSection2",
    "iconAndSection2",
    "sectionName2",
    "link2",
    "link3",
    "navSection3",
    "iconAndSection3",
    "sectionName3",
    "link4",
    "link5",
    "navSection4",
    "iconAndSection4",
    "sectionName4",
    "link6",
    "link7",
    "navSection5",
    "iconAndSection5",
    "sectionName5",
    "link8",
    "link9",
    "navSection6",
    "iconAndSection6",
    "sectionName6",
    "link10",
    "navSection7",
    "iconAndSection7",
    "sectionName7",
    "link11",
    "link12",
    "ctas",
    "button",
    "label",
    "button2",
    "label2",
    "columns",
    "plan",
    "teamplan",
    "enterpriseplan",
    "footer",
    "mainContainer4",
    "legals",
    "aboutPocket",
    "links",
    "hyperlinks",
    "aboutPocket2",
    "aboutPocket3",
    "snLogos",
    "trustedBy",
    "partnersLogos",
    "pokt",
    "group",
    "eth",
    "group8358",
    "ethereumLogo1",
    "ethereumLogo2",
    "polygon",
    "xDai",
    "binanceSmartChain",
    "fuse",
    "avalanche",
    "salesBanner",
    "mainContainer5",
    "header",
    "frame22",
    "button6",
    "label6",
    "button7",
    "label7",
    "quote",
    "frame14",
    "frame8529",
    "image28",
    "frame8530",
    "table",
    "header2",
    "rows",
    "players",
    "text2",
    "infura",
    "alchemy",
    "quicknode",
    "portal",
    "features",
    "iconAndSection17",
    "sectionName17",
    "link22",
    "iconBox10",
    "link23",
    "iconBox11",
    "link24",
    "iconBox12",
    "link25",
    "iconBox13",
    "link26",
    "features2",
    "iconAndSection18",
    "sectionName18",
    "link27",
    "iconBox14",
    "link28",
    "iconBox15",
    "link29",
    "iconBox16",
    "link30",
    "iconBox17",
    "link31",
    "features3",
    "iconAndSection19",
    "sectionName19",
    "link32",
    "iconBox18",
    "link33",
    "iconBox19",
    "link34",
    "iconBox20",
    "link35",
    "iconBox21",
    "link36",
    "features4",
    "iconAndSection20",
    "sectionName20",
    "link37",
    "iconBox22",
    "link38",
    "iconBox23",
    "link39",
    "iconBox24",
    "link40",
    "iconBox25",
    "link41",
    "features5",
    "iconAndSection21",
    "sectionName21",
    "link42",
    "iconBox26",
    "link43",
    "iconBox27",
    "link44",
    "iconBox28",
    "link45",
    "iconBox29",
    "link46",
    "features6",
    "iconAndSection22",
    "sectionName22",
    "link47",
    "iconBox30",
    "link48",
    "iconBox31",
    "link49",
    "iconBox32",
    "link50",
    "iconBox33",
    "link51",
    "features7",
    "iconAndSection23",
    "sectionName23",
    "link52",
    "iconBox34",
    "link53",
    "iconBox35",
    "link54",
    "iconBox36",
    "link55",
    "iconBox37",
    "link56",
    "outline",
    "header3",
    "rpcThatFitsYourNeeds",
    "calculatorCenteredContainer",
    "header4",
    "frame26",
    "frame25",
    "frame24",
    "textInput",
    "frame1",
    "frame2",
    "frame4",
    "frame3",
    "frame5",
    "userIsTypin",
    "frame6",
    "link57",
    "teamPriceBoxSingle2",
    "container",
    "totalMonthlyEstimate",
    "frame17",
    "iconAndSection24",
    "iconBox38",
    "sectionName24",
    "link58",
    "iconAndSection25",
    "iconBox39",
    "sectionName25",
    "link59",
    "button8",
    "label8",
    "badge",
  ],
  img: ["img"],
  navbar: [
    "navbar",
    "navbar2",
    "logoContainer",
    "logo",
    "navSectionsAndSignup",
    "navSections",
    "navSection",
    "iconAndSection",
    "sectionName",
    "link",
    "navSection2",
    "iconAndSection2",
    "sectionName2",
    "link2",
    "link3",
    "navSection3",
    "iconAndSection3",
    "sectionName3",
    "link4",
    "link5",
    "navSection4",
    "iconAndSection4",
    "sectionName4",
    "link6",
    "link7",
    "navSection5",
    "iconAndSection5",
    "sectionName5",
    "link8",
    "link9",
    "navSection6",
    "iconAndSection6",
    "sectionName6",
    "link10",
    "navSection7",
    "iconAndSection7",
    "sectionName7",
    "link11",
    "link12",
    "ctas",
    "button",
    "label",
    "button2",
    "label2",
  ],
  navbar2: [
    "navbar2",
    "logoContainer",
    "logo",
    "navSectionsAndSignup",
    "navSections",
    "navSection",
    "iconAndSection",
    "sectionName",
    "link",
    "navSection2",
    "iconAndSection2",
    "sectionName2",
    "link2",
    "link3",
    "navSection3",
    "iconAndSection3",
    "sectionName3",
    "link4",
    "link5",
    "navSection4",
    "iconAndSection4",
    "sectionName4",
    "link6",
    "link7",
    "navSection5",
    "iconAndSection5",
    "sectionName5",
    "link8",
    "link9",
    "navSection6",
    "iconAndSection6",
    "sectionName6",
    "link10",
    "navSection7",
    "iconAndSection7",
    "sectionName7",
    "link11",
    "link12",
    "ctas",
    "button",
    "label",
    "button2",
    "label2",
  ],
  logoContainer: ["logoContainer", "logo"],
  logo: ["logo"],
  navSectionsAndSignup: [
    "navSectionsAndSignup",
    "navSections",
    "navSection",
    "iconAndSection",
    "sectionName",
    "link",
    "navSection2",
    "iconAndSection2",
    "sectionName2",
    "link2",
    "link3",
    "navSection3",
    "iconAndSection3",
    "sectionName3",
    "link4",
    "link5",
    "navSection4",
    "iconAndSection4",
    "sectionName4",
    "link6",
    "link7",
    "navSection5",
    "iconAndSection5",
    "sectionName5",
    "link8",
    "link9",
    "navSection6",
    "iconAndSection6",
    "sectionName6",
    "link10",
    "navSection7",
    "iconAndSection7",
    "sectionName7",
    "link11",
    "link12",
    "ctas",
    "button",
    "label",
    "button2",
    "label2",
  ],
  navSections: [
    "navSections",
    "navSection",
    "iconAndSection",
    "sectionName",
    "link",
    "navSection2",
    "iconAndSection2",
    "sectionName2",
    "link2",
    "link3",
    "navSection3",
    "iconAndSection3",
    "sectionName3",
    "link4",
    "link5",
    "navSection4",
    "iconAndSection4",
    "sectionName4",
    "link6",
    "link7",
    "navSection5",
    "iconAndSection5",
    "sectionName5",
    "link8",
    "link9",
    "navSection6",
    "iconAndSection6",
    "sectionName6",
    "link10",
    "navSection7",
    "iconAndSection7",
    "sectionName7",
    "link11",
    "link12",
  ],
  navSection: ["navSection", "iconAndSection", "sectionName", "link"],
  iconAndSection: ["iconAndSection", "sectionName", "link"],
  sectionName: ["sectionName", "link"],
  link: ["link"],
  navSection2: ["navSection2", "iconAndSection2", "sectionName2", "link2", "link3"],
  iconAndSection2: ["iconAndSection2", "sectionName2", "link2", "link3"],
  sectionName2: ["sectionName2", "link2", "link3"],
  link2: ["link2", "link3"],
  link3: ["link3"],
  navSection3: ["navSection3", "iconAndSection3", "sectionName3", "link4", "link5"],
  iconAndSection3: ["iconAndSection3", "sectionName3", "link4", "link5"],
  sectionName3: ["sectionName3", "link4", "link5"],
  link4: ["link4", "link5"],
  link5: ["link5"],
  navSection4: ["navSection4", "iconAndSection4", "sectionName4", "link6", "link7"],
  iconAndSection4: ["iconAndSection4", "sectionName4", "link6", "link7"],
  sectionName4: ["sectionName4", "link6", "link7"],
  link6: ["link6", "link7"],
  link7: ["link7"],
  navSection5: ["navSection5", "iconAndSection5", "sectionName5", "link8", "link9"],
  iconAndSection5: ["iconAndSection5", "sectionName5", "link8", "link9"],
  sectionName5: ["sectionName5", "link8", "link9"],
  link8: ["link8", "link9"],
  link9: ["link9"],
  navSection6: ["navSection6", "iconAndSection6", "sectionName6", "link10"],
  iconAndSection6: ["iconAndSection6", "sectionName6", "link10"],
  sectionName6: ["sectionName6", "link10"],
  link10: ["link10"],
  navSection7: ["navSection7", "iconAndSection7", "sectionName7", "link11", "link12"],
  iconAndSection7: ["iconAndSection7", "sectionName7", "link11", "link12"],
  sectionName7: ["sectionName7", "link11", "link12"],
  link11: ["link11", "link12"],
  link12: ["link12"],
  ctas: ["ctas", "button", "label", "button2", "label2"],
  button: ["button", "label"],
  label: ["label"],
  button2: ["button2", "label2"],
  label2: ["label2"],
  columns: ["columns", "plan", "teamplan", "enterpriseplan"],
  plan: ["plan"],
  teamplan: ["teamplan"],
  enterpriseplan: ["enterpriseplan"],
  footer: [
    "footer",
    "mainContainer4",
    "legals",
    "aboutPocket",
    "links",
    "hyperlinks",
    "aboutPocket2",
    "aboutPocket3",
    "snLogos",
  ],
  mainContainer4: [
    "mainContainer4",
    "legals",
    "aboutPocket",
    "links",
    "hyperlinks",
    "aboutPocket2",
    "aboutPocket3",
    "snLogos",
  ],
  legals: ["legals", "aboutPocket"],
  aboutPocket: ["aboutPocket"],
  links: ["links", "hyperlinks", "aboutPocket2", "aboutPocket3", "snLogos"],
  hyperlinks: ["hyperlinks", "aboutPocket2", "aboutPocket3"],
  aboutPocket2: ["aboutPocket2"],
  aboutPocket3: ["aboutPocket3"],
  snLogos: ["snLogos"],
  trustedBy: [
    "trustedBy",
    "partnersLogos",
    "pokt",
    "group",
    "eth",
    "group8358",
    "ethereumLogo1",
    "ethereumLogo2",
    "polygon",
    "xDai",
    "binanceSmartChain",
    "fuse",
    "avalanche",
  ],
  partnersLogos: [
    "partnersLogos",
    "pokt",
    "group",
    "eth",
    "group8358",
    "ethereumLogo1",
    "ethereumLogo2",
    "polygon",
    "xDai",
    "binanceSmartChain",
    "fuse",
    "avalanche",
  ],
  pokt: ["pokt", "group"],
  group: ["group"],
  eth: ["eth", "group8358", "ethereumLogo1", "ethereumLogo2"],
  group8358: ["group8358", "ethereumLogo1", "ethereumLogo2"],
  ethereumLogo1: ["ethereumLogo1"],
  ethereumLogo2: ["ethereumLogo2"],
  polygon: ["polygon"],
  xDai: ["xDai"],
  binanceSmartChain: ["binanceSmartChain"],
  fuse: ["fuse"],
  avalanche: ["avalanche"],
  salesBanner: [
    "salesBanner",
    "mainContainer5",
    "header",
    "frame22",
    "button6",
    "label6",
    "button7",
    "label7",
    "quote",
    "frame14",
    "frame8529",
    "image28",
    "frame8530",
  ],
  mainContainer5: [
    "mainContainer5",
    "header",
    "frame22",
    "button6",
    "label6",
    "button7",
    "label7",
  ],
  header: ["header"],
  frame22: ["frame22", "button6", "label6", "button7", "label7"],
  button6: ["button6", "label6"],
  label6: ["label6"],
  button7: ["button7", "label7"],
  label7: ["label7"],
  quote: ["quote", "frame14", "frame8529", "image28", "frame8530"],
  frame14: ["frame14"],
  frame8529: ["frame8529", "image28", "frame8530"],
  image28: ["image28"],
  frame8530: ["frame8530"],
  table: [
    "table",
    "header2",
    "rows",
    "players",
    "text2",
    "infura",
    "alchemy",
    "quicknode",
    "portal",
    "features",
    "iconAndSection17",
    "sectionName17",
    "link22",
    "iconBox10",
    "link23",
    "iconBox11",
    "link24",
    "iconBox12",
    "link25",
    "iconBox13",
    "link26",
    "features2",
    "iconAndSection18",
    "sectionName18",
    "link27",
    "iconBox14",
    "link28",
    "iconBox15",
    "link29",
    "iconBox16",
    "link30",
    "iconBox17",
    "link31",
    "features3",
    "iconAndSection19",
    "sectionName19",
    "link32",
    "iconBox18",
    "link33",
    "iconBox19",
    "link34",
    "iconBox20",
    "link35",
    "iconBox21",
    "link36",
    "features4",
    "iconAndSection20",
    "sectionName20",
    "link37",
    "iconBox22",
    "link38",
    "iconBox23",
    "link39",
    "iconBox24",
    "link40",
    "iconBox25",
    "link41",
    "features5",
    "iconAndSection21",
    "sectionName21",
    "link42",
    "iconBox26",
    "link43",
    "iconBox27",
    "link44",
    "iconBox28",
    "link45",
    "iconBox29",
    "link46",
    "features6",
    "iconAndSection22",
    "sectionName22",
    "link47",
    "iconBox30",
    "link48",
    "iconBox31",
    "link49",
    "iconBox32",
    "link50",
    "iconBox33",
    "link51",
    "features7",
    "iconAndSection23",
    "sectionName23",
    "link52",
    "iconBox34",
    "link53",
    "iconBox35",
    "link54",
    "iconBox36",
    "link55",
    "iconBox37",
    "link56",
    "outline",
  ],
  header2: ["header2"],
  rows: [
    "rows",
    "players",
    "text2",
    "infura",
    "alchemy",
    "quicknode",
    "portal",
    "features",
    "iconAndSection17",
    "sectionName17",
    "link22",
    "iconBox10",
    "link23",
    "iconBox11",
    "link24",
    "iconBox12",
    "link25",
    "iconBox13",
    "link26",
    "features2",
    "iconAndSection18",
    "sectionName18",
    "link27",
    "iconBox14",
    "link28",
    "iconBox15",
    "link29",
    "iconBox16",
    "link30",
    "iconBox17",
    "link31",
    "features3",
    "iconAndSection19",
    "sectionName19",
    "link32",
    "iconBox18",
    "link33",
    "iconBox19",
    "link34",
    "iconBox20",
    "link35",
    "iconBox21",
    "link36",
    "features4",
    "iconAndSection20",
    "sectionName20",
    "link37",
    "iconBox22",
    "link38",
    "iconBox23",
    "link39",
    "iconBox24",
    "link40",
    "iconBox25",
    "link41",
    "features5",
    "iconAndSection21",
    "sectionName21",
    "link42",
    "iconBox26",
    "link43",
    "iconBox27",
    "link44",
    "iconBox28",
    "link45",
    "iconBox29",
    "link46",
    "features6",
    "iconAndSection22",
    "sectionName22",
    "link47",
    "iconBox30",
    "link48",
    "iconBox31",
    "link49",
    "iconBox32",
    "link50",
    "iconBox33",
    "link51",
    "features7",
    "iconAndSection23",
    "sectionName23",
    "link52",
    "iconBox34",
    "link53",
    "iconBox35",
    "link54",
    "iconBox36",
    "link55",
    "iconBox37",
    "link56",
  ],
  players: ["players", "text2", "infura", "alchemy", "quicknode", "portal"],
  text2: ["text2"],
  infura: ["infura"],
  alchemy: ["alchemy"],
  quicknode: ["quicknode"],
  portal: ["portal"],
  features: [
    "features",
    "iconAndSection17",
    "sectionName17",
    "link22",
    "iconBox10",
    "link23",
    "iconBox11",
    "link24",
    "iconBox12",
    "link25",
    "iconBox13",
    "link26",
  ],
  iconAndSection17: [
    "iconAndSection17",
    "sectionName17",
    "link22",
    "iconBox10",
    "link23",
    "iconBox11",
    "link24",
    "iconBox12",
    "link25",
    "iconBox13",
    "link26",
  ],
  sectionName17: ["sectionName17", "link22"],
  link22: ["link22"],
  iconBox10: ["iconBox10", "link23"],
  link23: ["link23"],
  iconBox11: ["iconBox11", "link24"],
  link24: ["link24"],
  iconBox12: ["iconBox12", "link25"],
  link25: ["link25"],
  iconBox13: ["iconBox13", "link26"],
  link26: ["link26"],
  features2: [
    "features2",
    "iconAndSection18",
    "sectionName18",
    "link27",
    "iconBox14",
    "link28",
    "iconBox15",
    "link29",
    "iconBox16",
    "link30",
    "iconBox17",
    "link31",
  ],
  iconAndSection18: [
    "iconAndSection18",
    "sectionName18",
    "link27",
    "iconBox14",
    "link28",
    "iconBox15",
    "link29",
    "iconBox16",
    "link30",
    "iconBox17",
    "link31",
  ],
  sectionName18: ["sectionName18", "link27"],
  link27: ["link27"],
  iconBox14: ["iconBox14", "link28"],
  link28: ["link28"],
  iconBox15: ["iconBox15", "link29"],
  link29: ["link29"],
  iconBox16: ["iconBox16", "link30"],
  link30: ["link30"],
  iconBox17: ["iconBox17", "link31"],
  link31: ["link31"],
  features3: [
    "features3",
    "iconAndSection19",
    "sectionName19",
    "link32",
    "iconBox18",
    "link33",
    "iconBox19",
    "link34",
    "iconBox20",
    "link35",
    "iconBox21",
    "link36",
  ],
  iconAndSection19: [
    "iconAndSection19",
    "sectionName19",
    "link32",
    "iconBox18",
    "link33",
    "iconBox19",
    "link34",
    "iconBox20",
    "link35",
    "iconBox21",
    "link36",
  ],
  sectionName19: ["sectionName19", "link32"],
  link32: ["link32"],
  iconBox18: ["iconBox18", "link33"],
  link33: ["link33"],
  iconBox19: ["iconBox19", "link34"],
  link34: ["link34"],
  iconBox20: ["iconBox20", "link35"],
  link35: ["link35"],
  iconBox21: ["iconBox21", "link36"],
  link36: ["link36"],
  features4: [
    "features4",
    "iconAndSection20",
    "sectionName20",
    "link37",
    "iconBox22",
    "link38",
    "iconBox23",
    "link39",
    "iconBox24",
    "link40",
    "iconBox25",
    "link41",
  ],
  iconAndSection20: [
    "iconAndSection20",
    "sectionName20",
    "link37",
    "iconBox22",
    "link38",
    "iconBox23",
    "link39",
    "iconBox24",
    "link40",
    "iconBox25",
    "link41",
  ],
  sectionName20: ["sectionName20", "link37"],
  link37: ["link37"],
  iconBox22: ["iconBox22", "link38"],
  link38: ["link38"],
  iconBox23: ["iconBox23", "link39"],
  link39: ["link39"],
  iconBox24: ["iconBox24", "link40"],
  link40: ["link40"],
  iconBox25: ["iconBox25", "link41"],
  link41: ["link41"],
  features5: [
    "features5",
    "iconAndSection21",
    "sectionName21",
    "link42",
    "iconBox26",
    "link43",
    "iconBox27",
    "link44",
    "iconBox28",
    "link45",
    "iconBox29",
    "link46",
  ],
  iconAndSection21: [
    "iconAndSection21",
    "sectionName21",
    "link42",
    "iconBox26",
    "link43",
    "iconBox27",
    "link44",
    "iconBox28",
    "link45",
    "iconBox29",
    "link46",
  ],
  sectionName21: ["sectionName21", "link42"],
  link42: ["link42"],
  iconBox26: ["iconBox26", "link43"],
  link43: ["link43"],
  iconBox27: ["iconBox27", "link44"],
  link44: ["link44"],
  iconBox28: ["iconBox28", "link45"],
  link45: ["link45"],
  iconBox29: ["iconBox29", "link46"],
  link46: ["link46"],
  features6: [
    "features6",
    "iconAndSection22",
    "sectionName22",
    "link47",
    "iconBox30",
    "link48",
    "iconBox31",
    "link49",
    "iconBox32",
    "link50",
    "iconBox33",
    "link51",
  ],
  iconAndSection22: [
    "iconAndSection22",
    "sectionName22",
    "link47",
    "iconBox30",
    "link48",
    "iconBox31",
    "link49",
    "iconBox32",
    "link50",
    "iconBox33",
    "link51",
  ],
  sectionName22: ["sectionName22", "link47"],
  link47: ["link47"],
  iconBox30: ["iconBox30", "link48"],
  link48: ["link48"],
  iconBox31: ["iconBox31", "link49"],
  link49: ["link49"],
  iconBox32: ["iconBox32", "link50"],
  link50: ["link50"],
  iconBox33: ["iconBox33", "link51"],
  link51: ["link51"],
  features7: [
    "features7",
    "iconAndSection23",
    "sectionName23",
    "link52",
    "iconBox34",
    "link53",
    "iconBox35",
    "link54",
    "iconBox36",
    "link55",
    "iconBox37",
    "link56",
  ],
  iconAndSection23: [
    "iconAndSection23",
    "sectionName23",
    "link52",
    "iconBox34",
    "link53",
    "iconBox35",
    "link54",
    "iconBox36",
    "link55",
    "iconBox37",
    "link56",
  ],
  sectionName23: ["sectionName23", "link52"],
  link52: ["link52"],
  iconBox34: ["iconBox34", "link53"],
  link53: ["link53"],
  iconBox35: ["iconBox35", "link54"],
  link54: ["link54"],
  iconBox36: ["iconBox36", "link55"],
  link55: ["link55"],
  iconBox37: ["iconBox37", "link56"],
  link56: ["link56"],
  outline: ["outline"],
  header3: ["header3", "rpcThatFitsYourNeeds"],
  rpcThatFitsYourNeeds: ["rpcThatFitsYourNeeds"],
  calculatorCenteredContainer: [
    "calculatorCenteredContainer",
    "header4",
    "frame26",
    "frame25",
    "frame24",
    "textInput",
    "frame1",
    "frame2",
    "frame4",
    "frame3",
    "frame5",
    "userIsTypin",
    "frame6",
    "link57",
    "teamPriceBoxSingle2",
    "container",
    "totalMonthlyEstimate",
    "frame17",
    "iconAndSection24",
    "iconBox38",
    "sectionName24",
    "link58",
    "iconAndSection25",
    "iconBox39",
    "sectionName25",
    "link59",
    "button8",
    "label8",
    "badge",
  ],
  header4: [
    "header4",
    "frame26",
    "frame25",
    "frame24",
    "textInput",
    "frame1",
    "frame2",
    "frame4",
    "frame3",
    "frame5",
    "userIsTypin",
    "frame6",
    "link57",
  ],
  frame26: ["frame26"],
  frame25: [
    "frame25",
    "frame24",
    "textInput",
    "frame1",
    "frame2",
    "frame4",
    "frame3",
    "frame5",
    "userIsTypin",
    "frame6",
    "link57",
  ],
  frame24: [
    "frame24",
    "textInput",
    "frame1",
    "frame2",
    "frame4",
    "frame3",
    "frame5",
    "userIsTypin",
    "frame6",
    "link57",
  ],
  textInput: [
    "textInput",
    "frame1",
    "frame2",
    "frame4",
    "frame3",
    "frame5",
    "userIsTypin",
    "frame6",
  ],
  frame1: ["frame1", "frame2"],
  frame2: ["frame2"],
  frame4: ["frame4"],
  frame3: ["frame3", "frame5", "userIsTypin"],
  frame5: ["frame5", "userIsTypin"],
  userIsTypin: ["userIsTypin"],
  frame6: ["frame6"],
  link57: ["link57"],
  teamPriceBoxSingle2: [
    "teamPriceBoxSingle2",
    "container",
    "totalMonthlyEstimate",
    "frame17",
    "iconAndSection24",
    "iconBox38",
    "sectionName24",
    "link58",
    "iconAndSection25",
    "iconBox39",
    "sectionName25",
    "link59",
    "button8",
    "label8",
    "badge",
  ],
  container: [
    "container",
    "totalMonthlyEstimate",
    "frame17",
    "iconAndSection24",
    "iconBox38",
    "sectionName24",
    "link58",
    "iconAndSection25",
    "iconBox39",
    "sectionName25",
    "link59",
  ],
  totalMonthlyEstimate: ["totalMonthlyEstimate"],
  frame17: [
    "frame17",
    "iconAndSection24",
    "iconBox38",
    "sectionName24",
    "link58",
    "iconAndSection25",
    "iconBox39",
    "sectionName25",
    "link59",
  ],
  iconAndSection24: ["iconAndSection24", "iconBox38", "sectionName24", "link58"],
  iconBox38: ["iconBox38"],
  sectionName24: ["sectionName24", "link58"],
  link58: ["link58"],
  iconAndSection25: ["iconAndSection25", "iconBox39", "sectionName25", "link59"],
  iconBox39: ["iconBox39"],
  sectionName25: ["sectionName25", "link59"],
  link59: ["link59"],
  button8: ["button8", "label8"],
  label8: ["label8"],
  badge: ["badge"],
} as const
type NodeNameType = keyof typeof PlasmicDescendants
type DescendantsType<T extends NodeNameType> = (typeof PlasmicDescendants)[T][number]
type NodeDefaultElementType = {
  root: "div"
  pricing: "div"
  img: typeof p.PlasmicImg
  navbar: "div"
  navbar2: "div"
  logoContainer: "div"
  logo: "div"
  navSectionsAndSignup: "div"
  navSections: "div"
  navSection: "div"
  iconAndSection: "div"
  sectionName: "div"
  link: "div"
  navSection2: "div"
  iconAndSection2: "div"
  sectionName2: "div"
  link2: "div"
  link3: "div"
  navSection3: "div"
  iconAndSection3: "div"
  sectionName3: "div"
  link4: "div"
  link5: "div"
  navSection4: "div"
  iconAndSection4: "div"
  sectionName4: "div"
  link6: "div"
  link7: "div"
  navSection5: "div"
  iconAndSection5: "div"
  sectionName5: "div"
  link8: "div"
  link9: "div"
  navSection6: "div"
  iconAndSection6: "div"
  sectionName6: "div"
  link10: "div"
  navSection7: "div"
  iconAndSection7: "div"
  sectionName7: "div"
  link11: "div"
  link12: "div"
  ctas: "div"
  button: "div"
  label: "div"
  button2: "div"
  label2: "div"
  columns: "div"
  plan: typeof Plan
  teamplan: typeof Teamplan
  enterpriseplan: typeof Enterpriseplan
  footer: "div"
  mainContainer4: "div"
  legals: "div"
  aboutPocket: "div"
  links: "div"
  hyperlinks: "div"
  aboutPocket2: "div"
  aboutPocket3: "div"
  snLogos: "div"
  trustedBy: "div"
  partnersLogos: "div"
  pokt: "div"
  group: "div"
  eth: "div"
  group8358: "div"
  ethereumLogo1: "div"
  ethereumLogo2: "div"
  polygon: "div"
  xDai: "div"
  binanceSmartChain: "div"
  fuse: "div"
  avalanche: "div"
  salesBanner: "div"
  mainContainer5: "div"
  header: "div"
  frame22: "div"
  button6: "div"
  label6: "div"
  button7: "div"
  label7: "div"
  quote: "div"
  frame14: "div"
  frame8529: "div"
  image28: "div"
  frame8530: "div"
  table: "div"
  header2: "div"
  rows: "div"
  players: "div"
  text2: "div"
  infura: "div"
  alchemy: "div"
  quicknode: "div"
  portal: "div"
  features: "div"
  iconAndSection17: "div"
  sectionName17: "div"
  link22: "div"
  iconBox10: "div"
  link23: "div"
  iconBox11: "div"
  link24: "div"
  iconBox12: "div"
  link25: "div"
  iconBox13: "div"
  link26: "div"
  features2: "div"
  iconAndSection18: "div"
  sectionName18: "div"
  link27: "div"
  iconBox14: "div"
  link28: "div"
  iconBox15: "div"
  link29: "div"
  iconBox16: "div"
  link30: "div"
  iconBox17: "div"
  link31: "div"
  features3: "div"
  iconAndSection19: "div"
  sectionName19: "div"
  link32: "div"
  iconBox18: "div"
  link33: "div"
  iconBox19: "div"
  link34: "div"
  iconBox20: "div"
  link35: "div"
  iconBox21: "div"
  link36: "div"
  features4: "div"
  iconAndSection20: "div"
  sectionName20: "div"
  link37: "div"
  iconBox22: "div"
  link38: "div"
  iconBox23: "div"
  link39: "div"
  iconBox24: "div"
  link40: "div"
  iconBox25: "div"
  link41: "div"
  features5: "div"
  iconAndSection21: "div"
  sectionName21: "div"
  link42: "div"
  iconBox26: "div"
  link43: "div"
  iconBox27: "div"
  link44: "div"
  iconBox28: "div"
  link45: "div"
  iconBox29: "div"
  link46: "div"
  features6: "div"
  iconAndSection22: "div"
  sectionName22: "div"
  link47: "div"
  iconBox30: "div"
  link48: "div"
  iconBox31: "div"
  link49: "div"
  iconBox32: "div"
  link50: "div"
  iconBox33: "div"
  link51: "div"
  features7: "div"
  iconAndSection23: "div"
  sectionName23: "div"
  link52: "div"
  iconBox34: "div"
  link53: "div"
  iconBox35: "div"
  link54: "div"
  iconBox36: "div"
  link55: "div"
  iconBox37: "div"
  link56: "div"
  outline: "div"
  header3: "div"
  rpcThatFitsYourNeeds: "div"
  calculatorCenteredContainer: "div"
  header4: "div"
  frame26: "div"
  frame25: "div"
  frame24: "div"
  textInput: "div"
  frame1: "div"
  frame2: "div"
  frame4: "div"
  frame3: "div"
  frame5: "div"
  userIsTypin: "div"
  frame6: "div"
  link57: "div"
  teamPriceBoxSingle2: "div"
  container: "div"
  totalMonthlyEstimate: "div"
  frame17: "div"
  iconAndSection24: "div"
  iconBox38: "div"
  sectionName24: "div"
  link58: "div"
  iconAndSection25: "div"
  iconBox39: "div"
  sectionName25: "div"
  link59: "div"
  button8: "div"
  label8: "div"
  badge: "div"
}

type ReservedPropsType = "variants" | "args" | "overrides"
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs
    args?: PlasmicHomepage__ArgsType
    overrides?: NodeOverridesType<T>
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }
  const func = function <T extends PropsType>(props: T & StrictProps<T, PropsType>) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps,
        }),
      [props, nodeName],
    )
    return PlasmicHomepage__RenderFunc({ variants, args, overrides, forNode: nodeName })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage"
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`
  }
  return func
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    pricing: makeNodeComponent("pricing"),
    img: makeNodeComponent("img"),
    navbar: makeNodeComponent("navbar"),
    navbar2: makeNodeComponent("navbar2"),
    logoContainer: makeNodeComponent("logoContainer"),
    logo: makeNodeComponent("logo"),
    navSectionsAndSignup: makeNodeComponent("navSectionsAndSignup"),
    navSections: makeNodeComponent("navSections"),
    navSection: makeNodeComponent("navSection"),
    iconAndSection: makeNodeComponent("iconAndSection"),
    sectionName: makeNodeComponent("sectionName"),
    link: makeNodeComponent("link"),
    navSection2: makeNodeComponent("navSection2"),
    iconAndSection2: makeNodeComponent("iconAndSection2"),
    sectionName2: makeNodeComponent("sectionName2"),
    link2: makeNodeComponent("link2"),
    link3: makeNodeComponent("link3"),
    navSection3: makeNodeComponent("navSection3"),
    iconAndSection3: makeNodeComponent("iconAndSection3"),
    sectionName3: makeNodeComponent("sectionName3"),
    link4: makeNodeComponent("link4"),
    link5: makeNodeComponent("link5"),
    navSection4: makeNodeComponent("navSection4"),
    iconAndSection4: makeNodeComponent("iconAndSection4"),
    sectionName4: makeNodeComponent("sectionName4"),
    link6: makeNodeComponent("link6"),
    link7: makeNodeComponent("link7"),
    navSection5: makeNodeComponent("navSection5"),
    iconAndSection5: makeNodeComponent("iconAndSection5"),
    sectionName5: makeNodeComponent("sectionName5"),
    link8: makeNodeComponent("link8"),
    link9: makeNodeComponent("link9"),
    navSection6: makeNodeComponent("navSection6"),
    iconAndSection6: makeNodeComponent("iconAndSection6"),
    sectionName6: makeNodeComponent("sectionName6"),
    link10: makeNodeComponent("link10"),
    navSection7: makeNodeComponent("navSection7"),
    iconAndSection7: makeNodeComponent("iconAndSection7"),
    sectionName7: makeNodeComponent("sectionName7"),
    link11: makeNodeComponent("link11"),
    link12: makeNodeComponent("link12"),
    ctas: makeNodeComponent("ctas"),
    button: makeNodeComponent("button"),
    label: makeNodeComponent("label"),
    button2: makeNodeComponent("button2"),
    label2: makeNodeComponent("label2"),
    columns: makeNodeComponent("columns"),
    plan: makeNodeComponent("plan"),
    teamplan: makeNodeComponent("teamplan"),
    enterpriseplan: makeNodeComponent("enterpriseplan"),
    footer: makeNodeComponent("footer"),
    mainContainer4: makeNodeComponent("mainContainer4"),
    legals: makeNodeComponent("legals"),
    aboutPocket: makeNodeComponent("aboutPocket"),
    links: makeNodeComponent("links"),
    hyperlinks: makeNodeComponent("hyperlinks"),
    aboutPocket2: makeNodeComponent("aboutPocket2"),
    aboutPocket3: makeNodeComponent("aboutPocket3"),
    snLogos: makeNodeComponent("snLogos"),
    trustedBy: makeNodeComponent("trustedBy"),
    partnersLogos: makeNodeComponent("partnersLogos"),
    pokt: makeNodeComponent("pokt"),
    group: makeNodeComponent("group"),
    eth: makeNodeComponent("eth"),
    group8358: makeNodeComponent("group8358"),
    ethereumLogo1: makeNodeComponent("ethereumLogo1"),
    ethereumLogo2: makeNodeComponent("ethereumLogo2"),
    polygon: makeNodeComponent("polygon"),
    xDai: makeNodeComponent("xDai"),
    binanceSmartChain: makeNodeComponent("binanceSmartChain"),
    fuse: makeNodeComponent("fuse"),
    avalanche: makeNodeComponent("avalanche"),
    salesBanner: makeNodeComponent("salesBanner"),
    mainContainer5: makeNodeComponent("mainContainer5"),
    header: makeNodeComponent("header"),
    frame22: makeNodeComponent("frame22"),
    button6: makeNodeComponent("button6"),
    label6: makeNodeComponent("label6"),
    button7: makeNodeComponent("button7"),
    label7: makeNodeComponent("label7"),
    quote: makeNodeComponent("quote"),
    frame14: makeNodeComponent("frame14"),
    frame8529: makeNodeComponent("frame8529"),
    image28: makeNodeComponent("image28"),
    frame8530: makeNodeComponent("frame8530"),
    table: makeNodeComponent("table"),
    header2: makeNodeComponent("header2"),
    rows: makeNodeComponent("rows"),
    players: makeNodeComponent("players"),
    text2: makeNodeComponent("text2"),
    infura: makeNodeComponent("infura"),
    alchemy: makeNodeComponent("alchemy"),
    quicknode: makeNodeComponent("quicknode"),
    portal: makeNodeComponent("portal"),
    features: makeNodeComponent("features"),
    iconAndSection17: makeNodeComponent("iconAndSection17"),
    sectionName17: makeNodeComponent("sectionName17"),
    link22: makeNodeComponent("link22"),
    iconBox10: makeNodeComponent("iconBox10"),
    link23: makeNodeComponent("link23"),
    iconBox11: makeNodeComponent("iconBox11"),
    link24: makeNodeComponent("link24"),
    iconBox12: makeNodeComponent("iconBox12"),
    link25: makeNodeComponent("link25"),
    iconBox13: makeNodeComponent("iconBox13"),
    link26: makeNodeComponent("link26"),
    features2: makeNodeComponent("features2"),
    iconAndSection18: makeNodeComponent("iconAndSection18"),
    sectionName18: makeNodeComponent("sectionName18"),
    link27: makeNodeComponent("link27"),
    iconBox14: makeNodeComponent("iconBox14"),
    link28: makeNodeComponent("link28"),
    iconBox15: makeNodeComponent("iconBox15"),
    link29: makeNodeComponent("link29"),
    iconBox16: makeNodeComponent("iconBox16"),
    link30: makeNodeComponent("link30"),
    iconBox17: makeNodeComponent("iconBox17"),
    link31: makeNodeComponent("link31"),
    features3: makeNodeComponent("features3"),
    iconAndSection19: makeNodeComponent("iconAndSection19"),
    sectionName19: makeNodeComponent("sectionName19"),
    link32: makeNodeComponent("link32"),
    iconBox18: makeNodeComponent("iconBox18"),
    link33: makeNodeComponent("link33"),
    iconBox19: makeNodeComponent("iconBox19"),
    link34: makeNodeComponent("link34"),
    iconBox20: makeNodeComponent("iconBox20"),
    link35: makeNodeComponent("link35"),
    iconBox21: makeNodeComponent("iconBox21"),
    link36: makeNodeComponent("link36"),
    features4: makeNodeComponent("features4"),
    iconAndSection20: makeNodeComponent("iconAndSection20"),
    sectionName20: makeNodeComponent("sectionName20"),
    link37: makeNodeComponent("link37"),
    iconBox22: makeNodeComponent("iconBox22"),
    link38: makeNodeComponent("link38"),
    iconBox23: makeNodeComponent("iconBox23"),
    link39: makeNodeComponent("link39"),
    iconBox24: makeNodeComponent("iconBox24"),
    link40: makeNodeComponent("link40"),
    iconBox25: makeNodeComponent("iconBox25"),
    link41: makeNodeComponent("link41"),
    features5: makeNodeComponent("features5"),
    iconAndSection21: makeNodeComponent("iconAndSection21"),
    sectionName21: makeNodeComponent("sectionName21"),
    link42: makeNodeComponent("link42"),
    iconBox26: makeNodeComponent("iconBox26"),
    link43: makeNodeComponent("link43"),
    iconBox27: makeNodeComponent("iconBox27"),
    link44: makeNodeComponent("link44"),
    iconBox28: makeNodeComponent("iconBox28"),
    link45: makeNodeComponent("link45"),
    iconBox29: makeNodeComponent("iconBox29"),
    link46: makeNodeComponent("link46"),
    features6: makeNodeComponent("features6"),
    iconAndSection22: makeNodeComponent("iconAndSection22"),
    sectionName22: makeNodeComponent("sectionName22"),
    link47: makeNodeComponent("link47"),
    iconBox30: makeNodeComponent("iconBox30"),
    link48: makeNodeComponent("link48"),
    iconBox31: makeNodeComponent("iconBox31"),
    link49: makeNodeComponent("link49"),
    iconBox32: makeNodeComponent("iconBox32"),
    link50: makeNodeComponent("link50"),
    iconBox33: makeNodeComponent("iconBox33"),
    link51: makeNodeComponent("link51"),
    features7: makeNodeComponent("features7"),
    iconAndSection23: makeNodeComponent("iconAndSection23"),
    sectionName23: makeNodeComponent("sectionName23"),
    link52: makeNodeComponent("link52"),
    iconBox34: makeNodeComponent("iconBox34"),
    link53: makeNodeComponent("link53"),
    iconBox35: makeNodeComponent("iconBox35"),
    link54: makeNodeComponent("link54"),
    iconBox36: makeNodeComponent("iconBox36"),
    link55: makeNodeComponent("link55"),
    iconBox37: makeNodeComponent("iconBox37"),
    link56: makeNodeComponent("link56"),
    outline: makeNodeComponent("outline"),
    header3: makeNodeComponent("header3"),
    rpcThatFitsYourNeeds: makeNodeComponent("rpcThatFitsYourNeeds"),
    calculatorCenteredContainer: makeNodeComponent("calculatorCenteredContainer"),
    header4: makeNodeComponent("header4"),
    frame26: makeNodeComponent("frame26"),
    frame25: makeNodeComponent("frame25"),
    frame24: makeNodeComponent("frame24"),
    textInput: makeNodeComponent("textInput"),
    frame1: makeNodeComponent("frame1"),
    frame2: makeNodeComponent("frame2"),
    frame4: makeNodeComponent("frame4"),
    frame3: makeNodeComponent("frame3"),
    frame5: makeNodeComponent("frame5"),
    userIsTypin: makeNodeComponent("userIsTypin"),
    frame6: makeNodeComponent("frame6"),
    link57: makeNodeComponent("link57"),
    teamPriceBoxSingle2: makeNodeComponent("teamPriceBoxSingle2"),
    container: makeNodeComponent("container"),
    totalMonthlyEstimate: makeNodeComponent("totalMonthlyEstimate"),
    frame17: makeNodeComponent("frame17"),
    iconAndSection24: makeNodeComponent("iconAndSection24"),
    iconBox38: makeNodeComponent("iconBox38"),
    sectionName24: makeNodeComponent("sectionName24"),
    link58: makeNodeComponent("link58"),
    iconAndSection25: makeNodeComponent("iconAndSection25"),
    iconBox39: makeNodeComponent("iconBox39"),
    sectionName25: makeNodeComponent("sectionName25"),
    link59: makeNodeComponent("link59"),
    button8: makeNodeComponent("button8"),
    label8: makeNodeComponent("label8"),
    badge: makeNodeComponent("badge"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: "",
    },
  },
)

export default PlasmicHomepage
/* prettier-ignore-end */
